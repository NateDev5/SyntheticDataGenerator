type Template = {
    content: string
}

export const Tags = {
    className: "<CLASS_NAME>",
    headers: "<HEADERS>",
    packageName: "<PACKAGE>",
    version: "<VERSION>",
    date: "<DATE>",
    plugins: "<PLUGINS>",
    startPoint: "<START_POINT>",
    startPointValues: "<SP_VALUES>",
    functions: "<FUNCTIONS>",
    constructors: "<CONSTRUCTORS>",
    declarations: "<DECLARATIONS>",
    name: "<NAME>",
    values: "<VALUES>"
}

export function ParamTag (index: number) {
    return `<PARAM${index}>`;
}

export const BaseTemplate:Template = {
    content: `
// Generated by ${Tags.packageName} ${Tags.version} (${Tags.date})
import { SyntheticDataGenerator, Interface, Mutator, WeightedMutator, RangeMutator } from "../data_generator/SyntheticDataGenerator.js";
${Tags.plugins}

${Tags.headers}
    
export class ${Tags.className} extends SyntheticDataGenerator{
    constructor(<DECLARATIONS>){
        super()
        <CONSTRUCTORS>
    }

    <FUNCTIONS>
}

function exec () {
    const p: ${Tags.className} = new ${Tags.className}();
    const _exec = <START_POINT>;
    console.log(_exec(<SP_VALUES>));
}

exec();
`
}

export const GenerateTemplate: Template = {
    content: `Generate(f: string | Interface, q: number): any {
    super._Generate(f, q);
}`
}

export const GenerateWithMutatorsTemplate: Template = {
    content: `GenerateWithMutators(f: string | Interface, m: Mutator[], c: number, cl: number, st: number): any {
    super._GenerateWithMutator(f, m, c, cl, st);
}`
}

export const Mutator: Template = {
    content: `const <NAME>: Mutator = { path: <PARAM1> };`
}

export const RangeMutator: Template = {
    content: `const <NAME>: RangeMutator = { path: <PARAM1>, getFromParents: true };`
}

export const WeightedMutator: Template = {
    content: `const <NAME>: WeightedMutator = { path: <PARAM1>, threshold: <PARAM2>, enum: <PARAM3> };`
}